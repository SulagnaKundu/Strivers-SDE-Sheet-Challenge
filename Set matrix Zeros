#include<bits/stdc++.h>
void setZeros(vector<vector<int>> &matrix)
{
    // Write your code here. 
    
    //Better than Bruteforce solution
    
    int r = matrix.size();
    int c = matrix[0].size();
    vector<int>row(r,1);
    vector<int>col(c,1);
    for(int i=0;i<r;i++){
        for(int j=0;j<c;j++){
            if(matrix[i][j] == 0){
                row[i] = 0;
                col[j] = 0;
            }
        }
    }
    for(int i=0;i<r;i++){
        for(int j = 0; j < c; j++) {
            if(row[i] == 0 || col[j] == 0){
                matrix[i][j] = 0;
            }
        }
    }


    //Most Optimal solution
    
    int n = matrix.size();
    int m = matrix[0].size();
    int ZeroIndexOfRow0 = 1;
    //initial traversing
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            if(matrix[i][j] == 0){
                //marking row0 of the matrix itself
                if(j!=0) matrix[0][j] = 0;
                else ZeroIndexOfRow0 = 0;
                //marking col0 of the matrix itself
                matrix[i][0] = 0;
            }
        }
    }
    //traversing to change 1s to 0s
    for(int i=1;i<n;i++){
        for(int j=1;j<m;j++){
            if(matrix[i][j]!=0){
                //now check in the 0th row and 0th col
                if(matrix[0][j] == 0 || matrix[i][0] == 0){
                    matrix[i][j] = 0;
                }
            }
        }
    }
    //last case for traversing row0
    if(matrix[0][0] == 0){
        for(int j=1;j<m;j++){
            matrix[0][j] = 0;
        }
    }
    //last case for traversing column0
    if(ZeroIndexOfRow0 == 0){
            for(int i=0;i<n;i++){
                matrix[i][0] = 0;
            }
    }
}
